# app/handlers/text.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""

import logging
from aiogram import F
from aiogram.types import Message

from app.handlers.states import is_waiting_for_input
from app.handlers.video_handlers import handle_text_input
from app.handlers.commands import cmd_start
from app.core.bot import get_bot

log = logging.getLogger("kudoaibot")

def register_text_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    bot, dp = get_bot()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ (–¥–ª—è –ø—Ä–∏–º–µ—Ä–æ—á–Ω–æ–π)
    dp.message.register(handle_photo_message, F.photo)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ –∫–æ–º–∞–Ω–¥)
    dp.message.register(handle_text_message, F.text & ~F.text.startswith("/"))
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º fallback –¥–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.message.register(handle_fallback_message)

async def handle_photo_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ (–¥–ª—è –ø—Ä–∏–º–µ—Ä–æ—á–Ω–æ–π)"""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–¥—ë—Ç –ª–∏ –±–æ—Ç —Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ—á–Ω–æ–π
    from app.handlers.tryon_handlers import handle_tryon_photo
    handled = await handle_tryon_photo(message)
    
    if not handled:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ—á–Ω–æ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        await message.answer(
            "üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –Ω–æ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —Å –Ω–∏–º –¥–µ–ª–∞—Ç—å.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é:"
        )
        await cmd_start(message)

async def handle_text_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∂–¥—ë—Ç –ª–∏ –±–æ—Ç –≤–≤–æ–¥–∞ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if is_waiting_for_input(user_id):
        await handle_text_input(message)
    else:
        # –ï—Å–ª–∏ –Ω–µ –∂–¥—ë–º –≤–≤–æ–¥–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
        await cmd_start(message)

async def handle_fallback_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, —Å—Ç–∏–∫–µ—Ä—ã –∏ —Ç.–¥.)"""
    log.info(f"–ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {message.content_type}")
    
    # –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await cmd_start(message)

