# app/ui/keyboards.py
"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–æ—Ç–∞"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from .callbacks import Cb, Actions
from .texts import t

__all__ = [
    'build_main_menu',
    'build_video_menu',
    'build_veo3_modes',
    'build_sora2_modes',
    'build_orientation_menu',
    'build_audio_menu',
    'build_video_result_menu',
    'build_confirm_generate',
    'build_keyboard',
    'tariff_selection',
    'topup_packs_menu',
    'btn'
]

def btn(text: str, action: str, id: str = None, extra: str = None) -> InlineKeyboardButton:
    """–°–æ–∑–¥–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å callback –¥–∞–Ω–Ω—ã–º–∏"""
    cb = Cb(action=action, id=id, extra=extra)
    return InlineKeyboardButton(text=text, callback_data=cb.pack())

def build_main_menu(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = [
        [btn(t("btn.video", lang), Actions.MENU_VIDEO)],
        [btn(t("btn.photo", lang), Actions.MENU_PHOTO)],
        [btn(t("btn.tryon", lang), Actions.MENU_TRYON)],
        [btn(t("btn.profile", lang), Actions.MENU_PROFILE)],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_video_menu(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –≤–∏–¥–µ–æ –º–æ–¥–µ–ª–∏"""
    keyboard = [
        [btn("‚ö° Veo 3 Fast (–±—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è)", Actions.VIDEO_VEO3_FAST)],
        [btn("üé• Veo 3 (—Ä–µ–∞–ª–∏–∑–º)", Actions.VIDEO_VEO3)],
        [btn("üåü Sora 2 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç)", Actions.VIDEO_SORA2)],
        [btn("üî• Sora 2 Pro (HQ)", Actions.VIDEO_SORA2_PRO)],
        [btn("ü§ñ Gemini Video (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)", Actions.VIDEO_GEMINI)],
        [btn(t("btn.back", lang), Actions.HOME)],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_veo3_modes(lang: str = "ru") -> InlineKeyboardMarkup:
    """–†–µ–∂–∏–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ VEO 3"""
    keyboard = [
        [btn(t("btn.mode_helper", lang), Actions.MODE_HELPER)],
        [btn(t("btn.mode_manual", lang), Actions.MODE_MANUAL)],
        [btn(t("btn.mode_meme", lang), Actions.MODE_MEME)],
        [btn(t("btn.back", lang), Actions.MENU_VIDEO)],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_sora2_modes(lang: str = "ru") -> InlineKeyboardMarkup:
    """–†–µ–∂–∏–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SORA 2"""
    keyboard = [
        [btn(t("btn.mode_helper", lang), Actions.MODE_HELPER, "sora2")],
        [btn(t("btn.mode_manual", lang), Actions.MODE_MANUAL, "sora2")],
        [btn(t("btn.mode_meme", lang), Actions.MODE_MEME, "sora2")],
        [btn(t("btn.back", lang), Actions.MENU_VIDEO)],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_orientation_menu(lang: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏"""
    keyboard = [
        [btn(t("btn.portrait", lang), Actions.ORIENTATION_PORTRAIT)],
        [btn(t("btn.landscape", lang), Actions.ORIENTATION_LANDSCAPE)],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_audio_menu(lang: str = "ru") -> InlineKeyboardMarkup:
    """–í—ã–±–æ—Ä –∞—É–¥–∏–æ"""
    keyboard = [
        [btn(t("btn.audio_yes", lang), Actions.AUDIO_YES)],
        [btn(t("btn.audio_no", lang), Actions.AUDIO_NO)],
        [btn(t("btn.back", lang), Actions.BACK)],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_video_result_menu(lang: str = "ru", with_helper: bool = True) -> InlineKeyboardMarkup:
    """–ú–µ–Ω—é –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ"""
    keyboard = [
        [btn(t("btn.regenerate", lang), Actions.VIDEO_REGENERATE)],
    ]
    if with_helper:
        keyboard.append([btn(t("btn.to_helper", lang), Actions.VIDEO_TO_HELPER)])
    keyboard.append([btn(t("btn.home", lang), Actions.HOME)])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_confirm_generate(lang: str = "ru", back_action: str = Actions.BACK) -> InlineKeyboardMarkup:
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"""
    keyboard = [
        [btn(t("btn.generate", lang), Actions.NAV, "generate")],
        [btn(t("btn.back", lang), back_action)],
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def tariff_selection(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∞—Ä–∏—Ñ–æ–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏"""
    from app.config.pricing import TARIFFS
    
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞
    for tariff_key, tariff_info in TARIFFS.items():
        button_text = f"{tariff_info.icon} {tariff_info.title} ‚Äî {tariff_info.price_rub} ‚ÇΩ"
        keyboard.append([
            InlineKeyboardButton(
                text=button_text,
                callback_data=f"buy_tariff_{tariff_key}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∞ "–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç–∫–∏"
    keyboard.append([
        InlineKeyboardButton(
            text="üí∞ –ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç–∫–∏",
            callback_data=Actions.PAYMENT_TOPUP
        )
    ])
    
    # –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
    keyboard.append([
        InlineKeyboardButton(
            text=t("btn.home", lang),
            callback_data=Actions.HOME
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def topup_packs_menu(lang: str = "ru") -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø–∞–∫–µ—Ç–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è"""
    from app.config.pricing import TOPUP_PACKS
    
    keyboard = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞
    for pack in TOPUP_PACKS:
        total_coins = pack.coins + pack.bonus_coins
        if pack.bonus_coins > 0:
            button_text = f"üí∞ {total_coins} –º–æ–Ω–µ—Ç ({pack.coins}+{pack.bonus_coins} –±–æ–Ω—É—Å) ‚Äî {pack.price_rub} ‚ÇΩ"
        else:
            button_text = f"üí∞ {pack.coins} –º–æ–Ω–µ—Ç ‚Äî {pack.price_rub} ‚ÇΩ"
        
        keyboard.append([
            InlineKeyboardButton(
                text=button_text,
                callback_data=f"buy_topup_{pack.coins}"
            )
        ])
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    keyboard.append([
        InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ö —Ç–∞—Ä–∏—Ñ–∞–º",
            callback_data=Actions.MENU_PROFILE
        )
    ])
    keyboard.append([
        InlineKeyboardButton(
            text=t("btn.home", lang),
            callback_data=Actions.HOME
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def build_keyboard(screen_id: str, lang: str = "ru") -> InlineKeyboardMarkup:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–∏–ª–¥–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã"""
    if screen_id == "main":
        return build_main_menu(lang)
    elif screen_id == "video":
        return build_video_menu(lang)
    elif screen_id == "veo3_modes":
        return build_veo3_modes(lang)
    elif screen_id == "sora2_modes":
        return build_sora2_modes(lang)
    elif screen_id == "orientation":
        return build_orientation_menu(lang)
    elif screen_id == "audio":
        return build_audio_menu(lang)
    else:
        return build_main_menu(lang)

