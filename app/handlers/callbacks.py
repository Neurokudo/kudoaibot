# app/handlers/callbacks.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –∫–Ω–æ–ø–æ–∫"""

import logging
from aiogram import F
from aiogram.types import CallbackQuery

from app.db import users
from app.services import billing
from app.ui import Actions, t
from app.ui.keyboards import build_main_menu, tariff_selection, topup_packs_menu
from app.core.bot import get_bot
from .commands import ensure_user_exists, get_user_language, get_user_data
from .video_handlers import (
    handle_video_menu,
    handle_veo3_menu,
    handle_sora2_menu,
    handle_mode_helper,
    handle_mode_manual,
    handle_mode_meme,
    handle_orientation_choice,
    handle_audio_choice,
    handle_video_regenerate,
    handle_video_to_helper
)

log = logging.getLogger("kudoaibot")

def register_callbacks():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    bot, dp = get_bot()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.callback_query.register(callback_home, F.data == Actions.HOME)
    dp.callback_query.register(callback_video, F.data == Actions.MENU_VIDEO)
    dp.callback_query.register(callback_veo3, F.data == Actions.VIDEO_VEO3)
    dp.callback_query.register(callback_sora2, F.data == Actions.VIDEO_SORA2)
    dp.callback_query.register(callback_photo, F.data == Actions.MENU_PHOTO)
    dp.callback_query.register(callback_tryon, F.data == Actions.MENU_TRYON)
    dp.callback_query.register(callback_profile, F.data == Actions.MENU_PROFILE)
    
    # –†–µ–∂–∏–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    dp.callback_query.register(callback_mode_helper, F.data == Actions.MODE_HELPER)
    dp.callback_query.register(callback_mode_manual, F.data == Actions.MODE_MANUAL)
    dp.callback_query.register(callback_mode_meme, F.data == Actions.MODE_MEME)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–¥–µ–æ
    dp.callback_query.register(callback_orientation_portrait, F.data == Actions.ORIENTATION_PORTRAIT)
    dp.callback_query.register(callback_orientation_landscape, F.data == Actions.ORIENTATION_LANDSCAPE)
    dp.callback_query.register(callback_audio_yes, F.data == Actions.AUDIO_YES)
    dp.callback_query.register(callback_audio_no, F.data == Actions.AUDIO_NO)
    
    # –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    dp.callback_query.register(callback_video_regenerate, F.data == Actions.VIDEO_REGENERATE)
    dp.callback_query.register(callback_video_to_helper, F.data == Actions.VIDEO_TO_HELPER)
    
    # –ü–æ–∫—É–ø–∫–∞ –º–æ–Ω–µ—Ç–æ–∫
    dp.callback_query.register(callback_show_topup, F.data == Actions.PAYMENT_TOPUP)
    
    # Fallback –¥–ª—è –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback'–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º!)
    dp.callback_query.register(callback_fallback)

# === –ù–ê–í–ò–ì–ê–¶–ò–Ø ===

async def callback_home(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.answer()
    await ensure_user_exists(callback.message)
    user_language = await get_user_language(callback.from_user.id)
    
    user_id = callback.from_user.id
    user_data = await get_user_data(user_id)
    name = callback.from_user.first_name or "–¥—Ä—É–≥"
    
    welcome_text = f"üëã {name}\n\n"
    welcome_text += "üí∞ –ë–∞–ª–∞–Ω—Å: {videos_left} –º–æ–Ω–µ—Ç–æ–∫\n".format(**user_data)
    welcome_text += "üìä –¢–∞—Ä–∏—Ñ: {subscription_type}\n\n".format(**user_data)
    welcome_text += "–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª:"
    
    await callback.message.edit_text(
        welcome_text,
        reply_markup=build_main_menu(user_language)
    )

# === –†–ê–ó–î–ï–õ–´ ===

async def callback_video(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –í–ò–î–ï–û"""
    await callback.answer()
    await handle_video_menu(callback)

# @dp.callback_query(F.data == Actions.VIDEO_VEO3)
async def callback_veo3(callback: CallbackQuery):
    """VEO 3 –º–µ–Ω—é"""
    await callback.answer()
    await handle_veo3_menu(callback)

# @dp.callback_query(F.data == Actions.VIDEO_SORA2)
async def callback_sora2(callback: CallbackQuery):
    """SORA 2 –º–µ–Ω—é"""
    await callback.answer()
    await handle_sora2_menu(callback)

# @dp.callback_query(F.data == Actions.MENU_PHOTO)
async def callback_photo(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –§–û–¢–û"""
    await callback.answer()
    await callback.message.edit_text(
        t("menu.photo"),
        reply_markup=build_main_menu()
    )

# @dp.callback_query(F.data == Actions.MENU_TRYON)
async def callback_tryon(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –ü–†–ò–ú–ï–†–û–ß–ù–ê–Ø"""
    await callback.answer()
    await callback.message.edit_text(
        t("menu.tryon"),
        reply_markup=build_main_menu()
    )

# @dp.callback_query(F.data == Actions.MENU_PROFILE)
async def callback_profile(callback: CallbackQuery):
    """–ü—Ä–æ—Ñ–∏–ª—å"""
    await callback.answer()
    await ensure_user_exists(callback.message)
    user_id = callback.from_user.id
    user_language = await get_user_language(user_id)
    
    user_data = await get_user_data(user_id)
    name = callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    user = await users.get_user(user_id)
    reg_date = user.get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') if user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    
    profile_text = f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å</b>\n\n"
    profile_text += f"–ò–º—è: {name}\n"
    profile_text += f"üí∞ –ë–∞–ª–∞–Ω—Å: {user_data['videos_left']} –º–æ–Ω–µ—Ç–æ–∫\n"
    profile_text += f"üìä –¢–∞—Ä–∏—Ñ: {user_data['subscription_type']}\n"
    profile_text += f"üìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {reg_date}\n"
    
    await callback.message.edit_text(
        profile_text,
        reply_markup=tariff_selection(user_language)
    )

# === –†–ï–ñ–ò–ú–´ –ì–ï–ù–ï–†–ê–¶–ò–ò ===

# @dp.callback_query(F.data == Actions.MODE_HELPER)
async def callback_mode_helper(callback: CallbackQuery):
    """–†–µ–∂–∏–º —É–º–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞"""
    await callback.answer()
    await handle_mode_helper(callback)

# @dp.callback_query(F.data == Actions.MODE_MANUAL)
async def callback_mode_manual(callback: CallbackQuery):
    """–†—É—á–Ω–æ–π —Ä–µ–∂–∏–º"""
    await callback.answer()
    await handle_mode_manual(callback)

# @dp.callback_query(F.data == Actions.MODE_MEME)
async def callback_mode_meme(callback: CallbackQuery):
    """–ú–µ–º–Ω—ã–π —Ä–µ–∂–∏–º"""
    await callback.answer()
    await handle_mode_meme(callback)

# === –ü–ê–†–ê–ú–ï–¢–†–´ –í–ò–î–ï–û ===

# @dp.callback_query(F.data == Actions.ORIENTATION_PORTRAIT)
async def callback_orientation_portrait(callback: CallbackQuery):
    """–ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"""
    await callback.answer()
    await handle_orientation_choice(callback)

# @dp.callback_query(F.data == Actions.ORIENTATION_LANDSCAPE)
async def callback_orientation_landscape(callback: CallbackQuery):
    """–õ–∞–Ω–¥—à–∞—Ñ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"""
    await callback.answer()
    await handle_orientation_choice(callback)

# @dp.callback_query(F.data == Actions.AUDIO_YES)
async def callback_audio_yes(callback: CallbackQuery):
    """–°–æ –∑–≤—É–∫–æ–º"""
    await callback.answer()
    await handle_audio_choice(callback)

# @dp.callback_query(F.data == Actions.AUDIO_NO)
async def callback_audio_no(callback: CallbackQuery):
    """–ë–µ–∑ –∑–≤—É–∫–∞"""
    await callback.answer()
    await handle_audio_choice(callback)

# === –ü–û–°–õ–ï –ì–ï–ù–ï–†–ê–¶–ò–ò ===

# @dp.callback_query(F.data == Actions.VIDEO_REGENERATE)
async def callback_video_regenerate(callback: CallbackQuery):
    """–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"""
    await callback.answer()
    await handle_video_regenerate(callback)

# @dp.callback_query(F.data == Actions.VIDEO_TO_HELPER)
async def callback_video_to_helper(callback: CallbackQuery):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–º–æ—â–Ω–∏–∫—É"""
    await callback.answer()
    await handle_video_to_helper(callback)

# === –ü–û–ö–£–ü–ö–ê –ú–û–ù–ï–¢–û–ö ===

# @dp.callback_query(F.data == Actions.PAYMENT_TOPUP)
async def callback_show_topup(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–∫–µ—Ç—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –º–æ–Ω–µ—Ç–æ–∫"""
    await callback.answer()
    
    from app.config.pricing import format_topup_packs_text
    
    topup_text = "üí∞ <b>–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç–∫–∏</b>\n\n"
    topup_text += format_topup_packs_text()
    topup_text += "\n\nüí° –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç:"
    
    await callback.message.edit_text(
        topup_text,
        reply_markup=topup_packs_menu()
    )

# === FALLBACK ===

async def callback_fallback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback'–æ–≤"""
    log.warning(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}: {callback.data}")
    await callback.answer("‚ö†Ô∏è –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", show_alert=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    user_language = await get_user_language(callback.from_user.id)
    await callback.message.edit_text(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=build_main_menu(user_language)
    )

