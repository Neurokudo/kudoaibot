# app/handlers/callbacks.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –∫–Ω–æ–ø–æ–∫"""

import logging
from aiogram import F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup

from app.db import users
from app.services import billing
from app.ui import Actions, t
from app.ui.keyboards import build_main_menu, tariff_selection, topup_packs_menu, build_profile_menu, build_tariffs_menu, build_help_menu
from app.core.bot import get_bot
from .commands import ensure_user_exists, get_user_language, get_user_data
from .video_handlers import (
    handle_video_menu,
    handle_veo3_menu,
    handle_sora2_menu,
    handle_mode_helper,
    handle_mode_manual,
    handle_mode_meme,
    handle_orientation_choice,
    handle_audio_choice,
    handle_video_regenerate,
    handle_video_to_helper
)

log = logging.getLogger("kudoaibot")

def register_callbacks():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    bot, dp = get_bot()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.callback_query.register(callback_home, F.data == "home")
    dp.callback_query.register(callback_video, F.data == "menu_video")
    dp.callback_query.register(callback_veo3, F.data == "video_veo3")
    dp.callback_query.register(callback_sora2, F.data == "video_sora2")
    dp.callback_query.register(callback_photo, F.data == "menu_photo")
    dp.callback_query.register(callback_tryon, F.data == "menu_tryon")
    dp.callback_query.register(callback_profile, F.data == "menu_profile")
    
    # –†–µ–∂–∏–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    dp.callback_query.register(callback_mode_helper, F.data == Actions.MODE_HELPER)
    dp.callback_query.register(callback_mode_manual, F.data == Actions.MODE_MANUAL)
    dp.callback_query.register(callback_mode_meme, F.data == Actions.MODE_MEME)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–¥–µ–æ
    dp.callback_query.register(callback_orientation_portrait, F.data == Actions.ORIENTATION_PORTRAIT)
    dp.callback_query.register(callback_orientation_landscape, F.data == Actions.ORIENTATION_LANDSCAPE)
    dp.callback_query.register(callback_audio_yes, F.data == Actions.AUDIO_YES)
    dp.callback_query.register(callback_audio_no, F.data == Actions.AUDIO_NO)
    
    # –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    dp.callback_query.register(callback_video_regenerate, F.data == Actions.VIDEO_REGENERATE)
    dp.callback_query.register(callback_video_to_helper, F.data == Actions.VIDEO_TO_HELPER)
    
    # –ü–æ–∫—É–ø–∫–∞ –º–æ–Ω–µ—Ç–æ–∫
    dp.callback_query.register(callback_show_topup, F.data == "show_topup")
    
    # –¢–∞—Ä–∏—Ñ—ã
    dp.callback_query.register(callback_show_tariffs, F.data == "menu_tariffs")
    
    # –ü–æ–º–æ—â—å
    dp.callback_query.register(callback_show_help, F.data == "menu_help")
    
    # –ù–æ–≤—ã–µ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
    dp.callback_query.register(callback_show_subscriptions, F.data == "subscriptions")
    dp.callback_query.register(callback_show_permanent_coins, F.data == "permanent_coins")
    dp.callback_query.register(callback_show_coin_explanation, F.data == "coin_explanation")
    dp.callback_query.register(callback_show_models_cost, F.data == "models_cost")
    
    # Fallback –¥–ª—è –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback'–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º!)
    dp.callback_query.register(callback_fallback)

# === –ù–ê–í–ò–ì–ê–¶–ò–Ø ===

async def callback_home(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.answer()
    await ensure_user_exists(callback.message)
    user_language = await get_user_language(callback.from_user.id)
    
    user_id = callback.from_user.id
    user_data = await get_user_data(user_id)
    name = callback.from_user.first_name or "–¥—Ä—É–≥"
    
    welcome_text = f"üëã {name}\n\n"
    welcome_text += f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>{user_data['videos_left']}</b> –º–æ–Ω–µ—Ç\n"
    welcome_text += f"üé¨ –ü—Ä–∏–º–µ—Ä–Ω–æ —Ö–≤–∞—Ç–∏—Ç –Ω–∞: {user_data['videos_left'] // 5} –≤–∏–¥–µ–æ\n\n"
    welcome_text += f"üé¨ <b>–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å:</b>\n"
    welcome_text += f"‚Äî –°–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –ò–ò\n"
    welcome_text += f"‚Äî –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ\n"
    welcome_text += f"‚Äî –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –ø—Ä–∏–º–µ—Ä–æ—á–Ω—É—é\n\n"
    welcome_text += f"–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá"
    
    await callback.message.edit_text(
        welcome_text,
        reply_markup=build_main_menu(user_language)
    )

# === –†–ê–ó–î–ï–õ–´ ===

async def callback_video(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –í–ò–î–ï–û"""
    await callback.answer()
    await handle_video_menu(callback)

# @dp.callback_query(F.data == Actions.VIDEO_VEO3)
async def callback_veo3(callback: CallbackQuery):
    """VEO 3 –º–µ–Ω—é"""
    await callback.answer()
    await handle_veo3_menu(callback)

# @dp.callback_query(F.data == Actions.VIDEO_SORA2)
async def callback_sora2(callback: CallbackQuery):
    """SORA 2 –º–µ–Ω—é"""
    await callback.answer()
    await handle_sora2_menu(callback)

# @dp.callback_query(F.data == Actions.MENU_PHOTO)
async def callback_photo(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –§–û–¢–û"""
    await callback.answer()
    await callback.message.edit_text(
        t("menu.photo"),
        reply_markup=build_main_menu()
    )

# @dp.callback_query(F.data == Actions.MENU_TRYON)
async def callback_tryon(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –ü–†–ò–ú–ï–†–û–ß–ù–ê–Ø"""
    await callback.answer()
    await callback.message.edit_text(
        t("menu.tryon"),
        reply_markup=build_main_menu()
    )

# @dp.callback_query(F.data == Actions.MENU_PROFILE)
async def callback_profile(callback: CallbackQuery):
    """–ü—Ä–æ—Ñ–∏–ª—å"""
    await callback.answer()
    await ensure_user_exists(callback.message)
    user_id = callback.from_user.id
    user_language = await get_user_language(user_id)
    
    user_data = await get_user_data(user_id)
    name = callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    user = await users.get_user(user_id)
    reg_date = user.get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') if user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ
    from app.services.dual_balance import get_user_dual_balance
    balance_info = await get_user_dual_balance(user_id)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ
    total_coins = balance_info['total']
    videos_left = total_coins // 5  # –ü—Ä–∏–º–µ—Ä–Ω–æ 5 –º–æ–Ω–µ—Ç –∑–∞ —Å–µ–∫—É–Ω–¥—É –≤–∏–¥–µ–æ
    
    profile_text = f"üë§ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
    profile_text += f"–ò–º—è: {name}\n"
    profile_text += f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>{total_coins}</b> –º–æ–Ω–µ—Ç\n"
    
    if user_data['subscription_type'] != '–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏':
        profile_text += f"üìÖ –ü–æ–¥–ø–∏—Å–∫–∞: {user_data['subscription_type']}\n"
    
    profile_text += f"üé¨ –ü—Ä–∏–º–µ—Ä–Ω–æ —Ö–≤–∞—Ç–∏—Ç –Ω–∞: {videos_left} –≤–∏–¥–µ–æ"
    
    await callback.message.edit_text(
        profile_text,
        reply_markup=build_profile_menu(user_language)
    )

# === –†–ï–ñ–ò–ú–´ –ì–ï–ù–ï–†–ê–¶–ò–ò ===

# @dp.callback_query(F.data == Actions.MODE_HELPER)
async def callback_mode_helper(callback: CallbackQuery):
    """–†–µ–∂–∏–º —É–º–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞"""
    await callback.answer()
    await handle_mode_helper(callback)

# @dp.callback_query(F.data == Actions.MODE_MANUAL)
async def callback_mode_manual(callback: CallbackQuery):
    """–†—É—á–Ω–æ–π —Ä–µ–∂–∏–º"""
    await callback.answer()
    await handle_mode_manual(callback)

# @dp.callback_query(F.data == Actions.MODE_MEME)
async def callback_mode_meme(callback: CallbackQuery):
    """–ú–µ–º–Ω—ã–π —Ä–µ–∂–∏–º"""
    await callback.answer()
    await handle_mode_meme(callback)

# === –ü–ê–†–ê–ú–ï–¢–†–´ –í–ò–î–ï–û ===

# @dp.callback_query(F.data == Actions.ORIENTATION_PORTRAIT)
async def callback_orientation_portrait(callback: CallbackQuery):
    """–ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"""
    await callback.answer()
    await handle_orientation_choice(callback)

# @dp.callback_query(F.data == Actions.ORIENTATION_LANDSCAPE)
async def callback_orientation_landscape(callback: CallbackQuery):
    """–õ–∞–Ω–¥—à–∞—Ñ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"""
    await callback.answer()
    await handle_orientation_choice(callback)

# @dp.callback_query(F.data == Actions.AUDIO_YES)
async def callback_audio_yes(callback: CallbackQuery):
    """–°–æ –∑–≤—É–∫–æ–º"""
    await callback.answer()
    await handle_audio_choice(callback)

# @dp.callback_query(F.data == Actions.AUDIO_NO)
async def callback_audio_no(callback: CallbackQuery):
    """–ë–µ–∑ –∑–≤—É–∫–∞"""
    await callback.answer()
    await handle_audio_choice(callback)

# === –ü–û–°–õ–ï –ì–ï–ù–ï–†–ê–¶–ò–ò ===

# @dp.callback_query(F.data == Actions.VIDEO_REGENERATE)
async def callback_video_regenerate(callback: CallbackQuery):
    """–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"""
    await callback.answer()
    await handle_video_regenerate(callback)

# @dp.callback_query(F.data == Actions.VIDEO_TO_HELPER)
async def callback_video_to_helper(callback: CallbackQuery):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–º–æ—â–Ω–∏–∫—É"""
    await callback.answer()
    await handle_video_to_helper(callback)

# === –ü–û–ö–£–ü–ö–ê –ú–û–ù–ï–¢–û–ö ===

# @dp.callback_query(F.data == Actions.PAYMENT_TOPUP)
async def callback_show_topup(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–∫–µ—Ç—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –º–æ–Ω–µ—Ç–æ–∫"""
    await callback.answer()
    
    from app.config.pricing import format_topup_packs_text
    
    topup_text = "üí∞ <b>–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç–∫–∏</b>\n\n"
    topup_text += format_topup_packs_text()
    topup_text += "\n\nüí° –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç:"
    
    await callback.message.edit_text(
        topup_text,
        reply_markup=topup_packs_menu()
    )

async def callback_show_tariffs(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –º–æ–Ω–µ—Ç–æ–∫"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    tariffs_text = "üí≥ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –∏ –º–æ–Ω–µ—Ç–∫–∏</b>\n\n"
    tariffs_text += "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç:\n\n"
    tariffs_text += "üéü <b>–ü–æ–¥–ø–∏—Å–∫–∞</b> ‚Äî –º–æ–Ω–µ—Ç–∫–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –Ω–∞ 30 –¥–Ω–µ–π\n"
    tariffs_text += "üü£ <b>–ú–æ–Ω–µ—Ç–∫–∏ –Ω–∞–≤—Å–µ–≥–¥–∞</b> ‚Äî –ø–æ–∫—É–ø–∞–µ—à—å –æ–¥–∏–Ω —Ä–∞–∑, –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞"
    
    await callback.message.edit_text(
        tariffs_text,
        reply_markup=build_tariffs_menu(user_language)
    )

async def callback_show_help(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    help_text = "‚ÑπÔ∏è <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>\n\n"
    help_text += "–ú–æ–Ω–µ—Ç–∫–∏ ‚Äî —ç—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –≤–∞–ª—é—Ç–∞.\n"
    help_text += "–ü–æ–¥–ø–∏—Å–∫–∞ –¥–∞—ë—Ç –º–æ–Ω–µ—Ç–∫–∏ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü, —Ä–∞–∑–æ–≤—ã–µ –ø–æ–∫—É–ø–∫–∏ ‚Äî –Ω–∞–≤—Å–µ–≥–¥–∞.\n"
    help_text += "–ú–æ–Ω–µ—Ç–∫–∏ —Ç—Ä–∞—Ç—è—Ç—Å—è –Ω–∞ –≤–∏–¥–µ–æ, —Ñ–æ—Ç–æ –∏ –ø—Ä–∏–º–µ—Ä–∫–∏.\n\n"
    help_text += "–í—Å—ë –ø—Ä–æ—Å—Ç–æ: –º–æ–Ω–µ—Ç–∫–∏ = —Å–µ–∫—É–Ω–¥—ã –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."
    
    await callback.message.edit_text(
        help_text,
        reply_markup=build_help_menu(user_language)
    )

async def callback_show_subscriptions(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    subscriptions_text = "üéü <b>–ü–æ–¥–ø–∏—Å–∫–∞ (–Ω–∞ 30 –¥–Ω–µ–π)</b>\n\n"
    subscriptions_text += "–£–¥–æ–±–Ω–æ, –µ—Å–ª–∏ —á–∞—Å—Ç–æ —Å–æ–∑–¥–∞—ë—à—å –≤–∏–¥–µ–æ.\n"
    subscriptions_text += "–ú–æ–Ω–µ—Ç–∫–∏ –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü –∏ –¥–µ–π—Å—Ç–≤—É—é—Ç 30 –¥–Ω–µ–π.\n\n"
    subscriptions_text += "üå± <b>–ü—Ä–æ–±–Ω—ã–π</b> ‚Äî 390 ‚ÇΩ ‚Üí 60 –º–æ–Ω–µ—Ç\n"
    subscriptions_text += "‚ú® <b>–ë–∞–∑–æ–≤—ã–π</b> ‚Äî 990 ‚ÇΩ ‚Üí 180 –º–æ–Ω–µ—Ç\n"
    subscriptions_text += "‚≠ê <b>–°—Ç–∞–Ω–¥–∞—Ä—Ç</b> ‚Äî 1 990 ‚ÇΩ ‚Üí 400 –º–æ–Ω–µ—Ç\n"
    subscriptions_text += "üíé <b>–ü—Ä–µ–º–∏—É–º</b> ‚Äî 4 990 ‚ÇΩ ‚Üí 1 100 –º–æ–Ω–µ—Ç\n"
    subscriptions_text += "üî• <b>PRO</b> ‚Äî 7 490 ‚ÇΩ ‚Üí 1 600 –º–æ–Ω–µ—Ç\n\n"
    subscriptions_text += "üïê –ú–æ–Ω–µ—Ç–∫–∏ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ –¥–µ–π—Å—Ç–≤—É—é—Ç 30 –¥–Ω–µ–π."
    
    keyboard = [
        [btn("üí∞ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "show_plans")],
        [btn("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "menu_tariffs")],
        [btn("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "home")]
    ]
    
    await callback.message.edit_text(
        subscriptions_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )

async def callback_show_permanent_coins(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –º–æ–Ω–µ—Ç–∫–∏"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    coins_text = "üü£ <b>–ú–æ–Ω–µ—Ç–∫–∏ –Ω–∞–≤—Å–µ–≥–¥–∞</b>\n\n"
    coins_text += "–ü–æ–∫—É–ø–∞–µ—à—å –æ–¥–∏–Ω —Ä–∞–∑ ‚Äî –º–æ–Ω–µ—Ç–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞.\n\n"
    coins_text += "50 –º–æ–Ω–µ—Ç ‚Äî 990 ‚ÇΩ\n"
    coins_text += "130 –º–æ–Ω–µ—Ç ‚Äî 1 990 ‚ÇΩ\n"
    coins_text += "280 –º–æ–Ω–µ—Ç ‚Äî 3 990 ‚ÇΩ\n"
    coins_text += "575 –º–æ–Ω–µ—Ç ‚Äî 7 490 ‚ÇΩ"
    
    keyboard = [
        [btn("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", "show_topup")],
        [btn("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "menu_tariffs")],
        [btn("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "home")]
    ]
    
    await callback.message.edit_text(
        coins_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )

async def callback_show_models_cost(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–æ–¥–µ–ª–µ–π"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    cost_text = "üí∏ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏–π:</b>\n\n"
    cost_text += "üé• <b>–í–∏–¥–µ–æ:</b>\n"
    cost_text += "‚Ä¢ Veo 3 Fast ‚Äî 3 –º–æ–Ω/—Å–µ–∫\n"
    cost_text += "‚Ä¢ Veo 3 ‚Äî 5 –º–æ–Ω/—Å–µ–∫\n"
    cost_text += "‚Ä¢ Sora 2 Pro ‚Äî 12 –º–æ–Ω/—Å–µ–∫\n"
    cost_text += "‚Ä¢ Gemini Video ‚Äî 4 –º–æ–Ω/—Å–µ–∫\n\n"
    cost_text += "üñº <b>–§–æ—Ç–æ:</b>\n"
    cost_text += "‚Ä¢ Enhance / Retouch / Style ‚Äî 4 –º–æ–Ω–µ—Ç–∫–∏\n\n"
    cost_text += "üëó <b>–ü—Ä–∏–º–µ—Ä–æ—á–Ω–∞—è:</b>\n"
    cost_text += "‚Ä¢ Imagen Try-On ‚Äî 6 –º–æ–Ω–µ—Ç\n"
    cost_text += "‚Ä¢ Imagen Pro ‚Äî 15 –º–æ–Ω–µ—Ç\n\n"
    cost_text += "üìò <b>–ü—Ä–∏–º–µ—Ä:</b>\n"
    cost_text += "10 —Å–µ–∫—É–Ω–¥ Veo 3 Fast = 30 –º–æ–Ω–µ—Ç"
    
    keyboard = [
        [btn("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", "menu_tariffs")],
        [btn("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "home")]
    ]
    
    await callback.message.edit_text(
        cost_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )

# === FALLBACK ===

async def callback_fallback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback'–æ–≤"""
    log.warning(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}: {callback.data}")
    await callback.answer("‚ö†Ô∏è –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", show_alert=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    user_language = await get_user_language(callback.from_user.id)
    await callback.message.edit_text(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=build_main_menu(user_language)
    )

