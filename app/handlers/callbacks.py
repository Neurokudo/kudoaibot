# app/handlers/callbacks.py
"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback –∫–Ω–æ–ø–æ–∫"""

import logging
from aiogram import F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup

from app.db import users
from app.services import billing
from app.ui import Actions, t
from app.ui.keyboards import build_main_menu, tariff_selection, topup_packs_menu, build_profile_menu, build_tariffs_menu, build_help_menu
from app.core.bot import get_bot
from .commands import ensure_user_exists, get_user_language, get_user_data
from .video_handlers import (
    handle_video_menu,
    handle_veo3_menu,
    handle_sora2_menu,
    handle_mode_helper,
    handle_mode_manual,
    handle_mode_meme,
    handle_orientation_choice,
    handle_audio_choice,
    handle_video_regenerate,
    handle_video_to_helper
)

log = logging.getLogger("kudoaibot")

def register_callbacks():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    bot, dp = get_bot()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ callback –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.callback_query.register(callback_home, F.data == Actions.HOME)
    dp.callback_query.register(callback_video, F.data == Actions.MENU_VIDEO)
    dp.callback_query.register(callback_veo3, F.data == Actions.VIDEO_VEO3)
    dp.callback_query.register(callback_sora2, F.data == Actions.VIDEO_SORA2)
    dp.callback_query.register(callback_photo, F.data == Actions.MENU_PHOTO)
    dp.callback_query.register(callback_tryon, F.data == Actions.MENU_TRYON)
    dp.callback_query.register(callback_profile, F.data == Actions.MENU_PROFILE)
    
    # –†–µ–∂–∏–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    dp.callback_query.register(callback_mode_helper, F.data == Actions.MODE_HELPER)
    dp.callback_query.register(callback_mode_manual, F.data == Actions.MODE_MANUAL)
    dp.callback_query.register(callback_mode_meme, F.data == Actions.MODE_MEME)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–¥–µ–æ
    dp.callback_query.register(callback_orientation_portrait, F.data == Actions.ORIENTATION_PORTRAIT)
    dp.callback_query.register(callback_orientation_landscape, F.data == Actions.ORIENTATION_LANDSCAPE)
    dp.callback_query.register(callback_audio_yes, F.data == Actions.AUDIO_YES)
    dp.callback_query.register(callback_audio_no, F.data == Actions.AUDIO_NO)
    
    # –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    dp.callback_query.register(callback_video_regenerate, F.data == Actions.VIDEO_REGENERATE)
    dp.callback_query.register(callback_video_to_helper, F.data == Actions.VIDEO_TO_HELPER)
    
    # –ü–æ–∫—É–ø–∫–∞ –º–æ–Ω–µ—Ç–æ–∫
    dp.callback_query.register(callback_show_topup, F.data == Actions.PAYMENT_TOPUP)
    
    # –¢–∞—Ä–∏—Ñ—ã
    dp.callback_query.register(callback_show_tariffs, F.data == Actions.MENU_TARIFFS)
    
    # –ü–æ–º–æ—â—å
    dp.callback_query.register(callback_show_help, F.data == Actions.MENU_HELP)
    
    # –ù–æ–≤—ã–µ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã
    dp.callback_query.register(callback_show_subscriptions, F.data == Actions.SUBSCRIPTIONS)
    dp.callback_query.register(callback_show_permanent_coins, F.data == Actions.PERMANENT_COINS)
    dp.callback_query.register(callback_show_coin_explanation, F.data == Actions.COIN_EXPLANATION)
    
    # Fallback –¥–ª—è –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback'–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º!)
    dp.callback_query.register(callback_fallback)

# === –ù–ê–í–ò–ì–ê–¶–ò–Ø ===

async def callback_home(callback: CallbackQuery):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.answer()
    await ensure_user_exists(callback.message)
    user_language = await get_user_language(callback.from_user.id)
    
    user_id = callback.from_user.id
    user_data = await get_user_data(user_id)
    name = callback.from_user.first_name or "–¥—Ä—É–≥"
    
    welcome_text = f"üëã {name}\n\n"
    welcome_text += f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>{user_data['videos_left']}</b> –º–æ–Ω–µ—Ç\n"
    welcome_text += f"üéØ –û—Å—Ç–∞–ª–æ—Å—å: ~{user_data['videos_left'] // 5} –≤–∏–¥–µ–æ\n\n"
    welcome_text += f"üé¨ <b>–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å:</b>\n"
    welcome_text += f"‚Äî –°–æ–∑–¥–∞–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å –ø–æ–º–æ—â—å—é –ò–ò\n"
    welcome_text += f"‚Äî –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ\n"
    welcome_text += f"‚Äî –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—É—é –ø—Ä–∏–º–µ—Ä–æ—á–Ω—É—é\n\n"
    welcome_text += f"–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá"
    
    await callback.message.edit_text(
        welcome_text,
        reply_markup=build_main_menu(user_language)
    )

# === –†–ê–ó–î–ï–õ–´ ===

async def callback_video(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –í–ò–î–ï–û"""
    await callback.answer()
    await handle_video_menu(callback)

# @dp.callback_query(F.data == Actions.VIDEO_VEO3)
async def callback_veo3(callback: CallbackQuery):
    """VEO 3 –º–µ–Ω—é"""
    await callback.answer()
    await handle_veo3_menu(callback)

# @dp.callback_query(F.data == Actions.VIDEO_SORA2)
async def callback_sora2(callback: CallbackQuery):
    """SORA 2 –º–µ–Ω—é"""
    await callback.answer()
    await handle_sora2_menu(callback)

# @dp.callback_query(F.data == Actions.MENU_PHOTO)
async def callback_photo(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –§–û–¢–û"""
    await callback.answer()
    await callback.message.edit_text(
        t("menu.photo"),
        reply_markup=build_main_menu()
    )

# @dp.callback_query(F.data == Actions.MENU_TRYON)
async def callback_tryon(callback: CallbackQuery):
    """–†–∞–∑–¥–µ–ª –ü–†–ò–ú–ï–†–û–ß–ù–ê–Ø"""
    await callback.answer()
    await callback.message.edit_text(
        t("menu.tryon"),
        reply_markup=build_main_menu()
    )

# @dp.callback_query(F.data == Actions.MENU_PROFILE)
async def callback_profile(callback: CallbackQuery):
    """–ü—Ä–æ—Ñ–∏–ª—å"""
    await callback.answer()
    await ensure_user_exists(callback.message)
    user_id = callback.from_user.id
    user_language = await get_user_language(user_id)
    
    user_data = await get_user_data(user_id)
    name = callback.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    user = await users.get_user(user_id)
    reg_date = user.get('created_at', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ') if user else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∞–ª–∞–Ω—Å–µ
    from app.services.dual_balance import get_user_dual_balance
    balance_info = await get_user_dual_balance(user_id)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ
    total_coins = balance_info['total']
    videos_left = total_coins // 5  # –ü—Ä–∏–º–µ—Ä–Ω–æ 5 –º–æ–Ω–µ—Ç –∑–∞ —Å–µ–∫—É–Ω–¥—É –≤–∏–¥–µ–æ
    
    profile_text = f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å</b>\n\n"
    profile_text += f"–ò–º—è: {name}\n"
    profile_text += f"üí∞ –ë–∞–ª–∞–Ω—Å: <b>{total_coins}</b> –º–æ–Ω–µ—Ç\n"
    
    if user_data['subscription_type'] != '–ë–µ–∑ –ø–æ–¥–ø–∏—Å–∫–∏':
        profile_text += f"üìÖ –ü–æ–¥–ø–∏—Å–∫–∞: {user_data['subscription_type']}\n"
    
    profile_text += f"üéØ –û—Å—Ç–∞–ª–æ—Å—å: ~{videos_left} –≤–∏–¥–µ–æ\n\n"
    profile_text += f"üìä <b>–ß—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å:</b>\n"
    profile_text += f"‚Äî –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –∏ —Ñ–æ—Ç–æ\n"
    profile_text += f"‚Äî –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–º–µ—Ä–æ—á–Ω—É—é\n"
    profile_text += f"‚Äî –ü–æ–ø–æ–ª–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å –ø—Ä—è–º–æ —Ç—É—Ç"
    
    await callback.message.edit_text(
        profile_text,
        reply_markup=build_profile_menu(user_language)
    )

# === –†–ï–ñ–ò–ú–´ –ì–ï–ù–ï–†–ê–¶–ò–ò ===

# @dp.callback_query(F.data == Actions.MODE_HELPER)
async def callback_mode_helper(callback: CallbackQuery):
    """–†–µ–∂–∏–º —É–º–Ω–æ–≥–æ –ø–æ–º–æ—â–Ω–∏–∫–∞"""
    await callback.answer()
    await handle_mode_helper(callback)

# @dp.callback_query(F.data == Actions.MODE_MANUAL)
async def callback_mode_manual(callback: CallbackQuery):
    """–†—É—á–Ω–æ–π —Ä–µ–∂–∏–º"""
    await callback.answer()
    await handle_mode_manual(callback)

# @dp.callback_query(F.data == Actions.MODE_MEME)
async def callback_mode_meme(callback: CallbackQuery):
    """–ú–µ–º–Ω—ã–π —Ä–µ–∂–∏–º"""
    await callback.answer()
    await handle_mode_meme(callback)

# === –ü–ê–†–ê–ú–ï–¢–†–´ –í–ò–î–ï–û ===

# @dp.callback_query(F.data == Actions.ORIENTATION_PORTRAIT)
async def callback_orientation_portrait(callback: CallbackQuery):
    """–ü–æ—Ä—Ç—Ä–µ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"""
    await callback.answer()
    await handle_orientation_choice(callback)

# @dp.callback_query(F.data == Actions.ORIENTATION_LANDSCAPE)
async def callback_orientation_landscape(callback: CallbackQuery):
    """–õ–∞–Ω–¥—à–∞—Ñ—Ç–Ω–∞—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è"""
    await callback.answer()
    await handle_orientation_choice(callback)

# @dp.callback_query(F.data == Actions.AUDIO_YES)
async def callback_audio_yes(callback: CallbackQuery):
    """–°–æ –∑–≤—É–∫–æ–º"""
    await callback.answer()
    await handle_audio_choice(callback)

# @dp.callback_query(F.data == Actions.AUDIO_NO)
async def callback_audio_no(callback: CallbackQuery):
    """–ë–µ–∑ –∑–≤—É–∫–∞"""
    await callback.answer()
    await handle_audio_choice(callback)

# === –ü–û–°–õ–ï –ì–ï–ù–ï–†–ê–¶–ò–ò ===

# @dp.callback_query(F.data == Actions.VIDEO_REGENERATE)
async def callback_video_regenerate(callback: CallbackQuery):
    """–ü–æ–≤—Ç–æ—Ä–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è"""
    await callback.answer()
    await handle_video_regenerate(callback)

# @dp.callback_query(F.data == Actions.VIDEO_TO_HELPER)
async def callback_video_to_helper(callback: CallbackQuery):
    """–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–º–æ—â–Ω–∏–∫—É"""
    await callback.answer()
    await handle_video_to_helper(callback)

# === –ü–û–ö–£–ü–ö–ê –ú–û–ù–ï–¢–û–ö ===

# @dp.callback_query(F.data == Actions.PAYMENT_TOPUP)
async def callback_show_topup(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞–∫–µ—Ç—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –º–æ–Ω–µ—Ç–æ–∫"""
    await callback.answer()
    
    from app.config.pricing import format_topup_packs_text
    
    topup_text = "üí∞ <b>–ö—É–ø–∏—Ç—å –º–æ–Ω–µ—Ç–∫–∏</b>\n\n"
    topup_text += format_topup_packs_text()
    topup_text += "\n\nüí° –í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç:"
    
    await callback.message.edit_text(
        topup_text,
        reply_markup=topup_packs_menu()
    )

async def callback_show_tariffs(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é —Ç–∞—Ä–∏—Ñ–æ–≤"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    tariffs_text = "üìä <b>–¢–∞—Ä–∏—Ñ—ã –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</b>\n\n"
    tariffs_text += "–í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥–∏—Ç:\n\n"
    tariffs_text += "üéü <b>–ü–æ–¥–ø–∏—Å–∫–∏</b> ‚Äî –ø–æ–ª—É—á–∞–µ—à—å –º–æ–Ω–µ—Ç–∫–∏ –Ω–∞ –º–µ—Å—è—Ü\n"
    tariffs_text += "üí∞ <b>–ú–æ–Ω–µ—Ç–∫–∏ –Ω–∞–≤—Å–µ–≥–¥–∞</b> ‚Äî –ø–æ–∫—É–ø–∞–µ—à—å –∏ —Ç—Ä–∞—Ç–∏—à—å –∫–æ–≥–¥–∞ —Ö–æ—á–µ—à—å"
    
    await callback.message.edit_text(
        tariffs_text,
        reply_markup=build_tariffs_menu(user_language)
    )

async def callback_show_help(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    help_text = "‚ÑπÔ∏è <b>–ü–æ–º–æ—â—å</b>\n\n"
    help_text += "–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å:\n"
    help_text += "‚Äî –ö–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –º–æ–Ω–µ—Ç–∫–∏\n"
    help_text += "‚Äî –ö–∞–∫–∏–µ –µ—Å—Ç—å —Ç–∞—Ä–∏—Ñ—ã\n"
    help_text += "‚Äî –ö–∞–∫ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"
    
    await callback.message.edit_text(
        help_text,
        reply_markup=build_help_menu(user_language)
    )

async def callback_show_subscriptions(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    subscriptions_text = "üéü <b>–ü–æ–¥–ø–∏—Å–∫–∏ (–Ω–∞ 30 –¥–Ω–µ–π)</b>\n\n"
    subscriptions_text += "–ü–æ–¥–ø–∏—Å–∫–∞ = —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –º–æ–Ω–µ—Ç–∫–∏ –Ω–∞ –º–µ—Å—è—Ü.\n"
    subscriptions_text += "–ß–µ—Ä–µ–∑ 30 –¥–Ω–µ–π –æ–Ω–∏ —Å–≥–æ—Ä–∞—é—Ç, –Ω–æ –≤—Å—ë, —á—Ç–æ —Ç—ã —Å–æ–∑–¥–∞–ª ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è.\n\n"
    subscriptions_text += "üå± <b>–ü—Ä–æ–±–Ω—ã–π</b> ‚Äî 390 ‚ÇΩ\n"
    subscriptions_text += "üé¨ 2‚Äì3 –≤–∏–¥–µ–æ\n\n"
    subscriptions_text += "‚ú® <b>–ë–∞–∑–æ–≤—ã–π</b> ‚Äî 990 ‚ÇΩ\n"
    subscriptions_text += "üé¨ 5‚Äì6 –≤–∏–¥–µ–æ\n\n"
    subscriptions_text += "‚≠êÔ∏è <b>–°—Ç–∞–Ω–¥–∞—Ä—Ç</b> ‚Äî 1 990 ‚ÇΩ\n"
    subscriptions_text += "üé¨ 12‚Äì15 –≤–∏–¥–µ–æ\n\n"
    subscriptions_text += "üíé <b>–ü—Ä–µ–º–∏—É–º</b> ‚Äî 4 990 ‚ÇΩ\n"
    subscriptions_text += "üé¨ 30‚Äì40 –≤–∏–¥–µ–æ\n\n"
    subscriptions_text += "üî• <b>PRO</b> ‚Äî 7 490 ‚ÇΩ\n"
    subscriptions_text += "üé¨ 25 HQ-–≤–∏–¥–µ–æ –≤ 4K"
    
    keyboard = [
        [btn("üí∞ –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", Actions.PAYMENT_PLANS)],
        [btn("üìò –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –º–æ–Ω–µ—Ç–∫–∞—Ö", Actions.COIN_EXPLANATION)],
        [btn("üîô –ù–∞–∑–∞–¥", Actions.MENU_TARIFFS)]
    ]
    
    await callback.message.edit_text(
        subscriptions_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )

async def callback_show_permanent_coins(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –º–æ–Ω–µ—Ç–∫–∏"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    coins_text = "üí∞ <b>–ú–æ–Ω–µ—Ç–∫–∏ –Ω–∞–≤—Å–µ–≥–¥–∞</b>\n\n"
    coins_text += "–ú–æ–Ω–µ—Ç–∫–∏ –æ—Å—Ç–∞—é—Ç—Å—è —É —Ç–µ–±—è –Ω–∞–≤—Å–µ–≥–¥–∞.\n"
    coins_text += "–•–æ—á–µ—à—å ‚Äî –∫–æ–ø–∏, —Ö–æ—á–µ—à—å ‚Äî —Ç—Ä–∞—Ç—å.\n\n"
    coins_text += "üü£ <b>50 –º–æ–Ω–µ—Ç</b> ‚Äî 990 ‚ÇΩ\n"
    coins_text += "üü£ <b>130 –º–æ–Ω–µ—Ç</b> ‚Äî 1 990 ‚ÇΩ\n"
    coins_text += "üü£ <b>280 –º–æ–Ω–µ—Ç</b> ‚Äî 3 990 ‚ÇΩ\n"
    coins_text += "üü£ <b>575 –º–æ–Ω–µ—Ç</b> ‚Äî 7 490 ‚ÇΩ"
    
    keyboard = [
        [btn("üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", Actions.PAYMENT_TOPUP)],
        [btn("‚ÑπÔ∏è –ö–∞–∫ —Å—á–∏—Ç–∞—é—Ç—Å—è –º–æ–Ω–µ—Ç–∫–∏", Actions.COIN_EXPLANATION)],
        [btn("üîô –ù–∞–∑–∞–¥", Actions.MENU_TARIFFS)]
    ]
    
    await callback.message.edit_text(
        coins_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )

async def callback_show_coin_explanation(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –º–æ–Ω–µ—Ç–æ–∫"""
    await callback.answer()
    user_language = await get_user_language(callback.from_user.id)
    
    explanation_text = "üßÆ <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n\n"
    explanation_text += "–ö–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ \"—Å—Ç–æ–∏—Ç\" –Ω–µ–º–Ω–æ–≥–æ –º–æ–Ω–µ—Ç:\n"
    explanation_text += "üé• –í–∏–¥–µ–æ ‚Äî –æ—Ç 3 –º–æ–Ω–µ—Ç –∑–∞ —Å–µ–∫—É–Ω–¥—É\n"
    explanation_text += "üñº –§–æ—Ç–æ (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ) ‚Äî 4 –º–æ–Ω–µ—Ç—ã\n"
    explanation_text += "üëó –ü—Ä–∏–º–µ—Ä–∫–∞ ‚Äî 6‚Äì15 –º–æ–Ω–µ—Ç\n\n"
    explanation_text += "<b>–ü—Ä–∏–º–µ—Ä:</b>\n"
    explanation_text += "–¢—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å 10-—Å–µ–∫—É–Ω–¥–Ω–æ–µ –≤–∏–¥–µ–æ Veo 3 Fast (3 –º–æ–Ω–µ—Ç—ã/—Å–µ–∫).\n"
    explanation_text += "10 √ó 3 = 30 –º–æ–Ω–µ—Ç.\n"
    explanation_text += "–ó–Ω–∞—á–∏—Ç, —É —Ç–µ–±—è –æ—Å—Ç–∞–Ω–µ—Ç—Å—è 30 –º–æ–Ω–µ—Ç –∏–∑ 60."
    
    keyboard = [
        [btn("üìä –¢–∞—Ä–∏—Ñ—ã", Actions.MENU_TARIFFS)],
        [btn("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", Actions.HOME)]
    ]
    
    await callback.message.edit_text(
        explanation_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )

# === FALLBACK ===

async def callback_fallback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö callback'–æ–≤"""
    log.warning(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π callback –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback.from_user.id}: {callback.data}")
    await callback.answer("‚ö†Ô∏è –≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç", show_alert=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    user_language = await get_user_language(callback.from_user.id)
    await callback.message.edit_text(
        "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        reply_markup=build_main_menu(user_language)
    )

